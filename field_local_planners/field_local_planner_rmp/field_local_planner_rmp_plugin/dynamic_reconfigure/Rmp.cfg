#!/usr/bin/env python
PACKAGE = "field_local_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("sphere_radius_factor",    double_t, 0, "RMP radius factor to inflate spheres",   1.2, 0.1, 10.0)
gen.add("integration_time",        double_t, 0, "RMP Integration time",    1.0,  0.001,   10.0)

rmp = "geodesic_goal"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              2.00, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "logistic")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.5,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "geodesic_heading"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              2.000, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "logistic")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.5,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "goal_position"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              2.000, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "inv_logistic")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            1.0,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "goal_orientation"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              2.000, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "inv_logistic")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.5,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "velocity_heading"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            0.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              1.000, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "logistic")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            1.0,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "damping"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              0.01, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "constant")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            1.0,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "sdf_obstacle"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              0.025, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "velocity")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.3,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "sdf_obstacle_damping"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              0.025, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "velocity")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.3,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         10.00,  0.1,   10.0)

rmp = "regularization"
gen.add(f"{rmp}_weight",           double_t, 0, f"RMP {rmp} weight",            1.0, 0.0, 1.0)
gen.add(f"{rmp}_gain",             double_t, 0, f"RMP {rmp} gain",              0.001, 0.001, 100.0)
# gen.add(f"{rmp}_metric_type",      str_t,    0, f"RMP {rmp} type",              "constant")
# gen.add(f"{rmp}_metric_offset",    double_t, 0, f"RMP {rmp} offset",            0.0,  0.0,   10.0)
# gen.add(f"{rmp}_metric_steepness", double_t, 0, f"RMP {rmp} steepness",         1.00,  0.1,   10.0)

exit(gen.generate(PACKAGE, "rmp", "Rmp"))
